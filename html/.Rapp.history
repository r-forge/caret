str(lm)
str(%do%)
str(%dopar%)
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate))
`%op%` <-  `%dopar%`
btFits <- foreach(iter = seq(along = btSamples),#
                            .verbose = FALSE,#
                            .packages = "caret",#
                            .errorhandling = "stop") %op%#
          fitter(btSamples[[iter]],  x = x, y = y, ctrl = bagControl, v = vars, ...)
library(caret)
data(mdrr)#
#
## remove some zero variance predictors and linear dependencies#
mdrrDescr <- mdrrDescr[, -nearZeroVar(mdrrDescr)]#
mdrrDescr <- mdrrDescr[, -findCorrelation(cor(mdrrDescr), .95)]
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate))
ldabag
summary(ldabag)
?bag
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate), vars = 5)
summary(ldabag)
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate, allowPArallel = FALSE), vars = 5)
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate, allowParallel = FALSE), vars = 5)
library(caret)
data(mdrr)#
#
## remove some zero variance predictors and linear dependencies#
mdrrDescr <- mdrrDescr[, -nearZeroVar(mdrrDescr)]#
mdrrDescr <- mdrrDescr[, -findCorrelation(cor(mdrrDescr), .95)]
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate, allowParallel = FALSE), vars = 5)
set.seed(1)
ldabag <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate, allowParallel = FALSE), vars = 5)
set.seed(1)
ldabag2 <- bag(mdrrDescr, mdrrClass, B = 10,#
                bagControl = bagControl(fit = ldaBag$fit,#
                                        predict = ldaBag$pred,#
                                        aggregate = ldaBag$aggregate, allowParallel = TRUE), vars = 5)
summary(ldabag)
summary(ldabag2)
library(caret)
?train
data(iris)#
TrainData <- iris[,1:4]#
TrainClasses <- iris[,5]#
#
knnFit1 <- train(TrainData, TrainClasses,#
                 method = "knn",#
                 preProcess = c("center", "scale"),#
                 tuneLength = 10,#
                 trControl = trainControl(method = "cv"))
data(iris)#
TrainData <- iris[,1:4]#
TrainClasses <- iris[,5]#
#
knnFit1 <- train(TrainData, TrainClasses,#
                 method = "knn",#
                 preProcess = c("center", "scale"),#
                 tuneLength = 10,#
                 trControl = trainControl(method = "cv", allowParallel = FALSE))
library(caret)
?train
?rfe
library(caret)
?avNNet
data(BloodBrain)#
## Not run: #
modelFit <- avNNet(bbbDescr, logBBB, size = 5, linout = TRUE, trace = FALSE)
modelFit
summary(modelFit)
?train
library(doMC)
registerDoMC(2)
data(BloodBrain)#
## Not run: #
modelFit <- avNNet(bbbDescr, logBBB, size = 5, linout = TRUE, trace = FALSE)
modelFit
data(BloodBrain)#
## Not run: #
modelFit <- avNNet(bbbDescr, logBBB, size = 5, linout = TRUE, trace = FALSE, repeats = 50)
modelFit
library(caret)
?train
data(iris)#
TrainData <- iris[,1:4]#
TrainClasses <- iris[,5]#
#
knnFit1 <- train(TrainData, TrainClasses,#
                 method = "knn",#
                 preProcess = c("center", "scale"),#
                 tuneLength = 10,#
                 trControl = trainControl(method = "cv"))#
#
knnFit2 <- train(TrainData, TrainClasses,#
                 method = "knn",#
                 preProcess = c("center", "scale"),#
                 tuneLength = 10, #
                 trControl = trainControl(method = "boot"))
knnFit1
knnFit2
names(knnFit2$control)
knnFit2$control$indexOut
knnFit1$control$indexOut
knnFit1$control$indexOut[[1]]
knnFit1$control$index[[1]]
install.packages("Mcomp", repos = "http://cran.r-project.org")
library(Mcomp)
M1
?M1
plot(M1$YAF2)
str(M1$YAF2)
tt <- M1$YAF2
class(tt)
tt
class(tt)
?MData
?Mdata
as.data.frame(tt)
unclass(tt)
names(M1)
str(M1$MND76)
M1$MND76$x
class(M1$MND76$x)
as.data.frame(M1$MND76$x)
plot(as.data.frame(M1$MND76$x))
plot(M1$MND76)
tt <- as.data.frame(M1$MND76$x)
?ts
time(M1$MND76)
M1$MND76
?ts
ts(1:10, frequency = 4, start = c(1959, 2)) # 2nd Quarter of 1959#
print( ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
prePRocess
preProcess
preProcess.default
?stl
stl(nottem, "per")
?forecast
lynx
nnetar
debug(nnetar)
? nnetar
fit <- nnetar(lynx)
lags.X
dim(x)
ls()
str(xx)
dim(lags.X)
lags
library(caret)
class(lags.X)
str(lags.X)
tt <- as.data.frame(lags.X)
featurePlot(tt, y)
lenght(y)
length(y)
?model.matrix
featurePlot(tt, y, pch = .5, col = rgb(.2, .2, .2, .5))
featurePlot(tt, y, pch = 16, col = rgb(.2, .2, .2, .5))
featurePlot(tt, y, pch = 16, col = rgb(.2, .2, .2, .5), type = c("p", "smooth"))
Q
paste(0:1)
make.names(paste(0:1))
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
table(Y)
debug(caret:::nominalTrainWorkflow)
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
n
info$loop
iter <- 1
parm <- 1
if(names(resampleIndex)[iter] != "AllData")#
        {#
          modelIndex <- resampleIndex[[iter]]#
          holdoutIndex <- ctrl$indexOut[[iter]]#
        } else {#
          modelIndex <- 1:nrow(dat)#
          holdoutIndex <- modelIndex#
        }
mod <- try(#
                 caret:::createModel(data = dat[modelIndex,,drop = FALSE ],#
                                     method = method,#
                                     tuneValue = info$loop[parm,,drop = FALSE],#
                                     obsLevels = lev,#
                                     pp = ppp,#
                                     custom = ctrl$custom$model,#
                                     ...),#
                 silent = TRUE)
mod
mod$fit
predicted <- try(#
                           caret:::predictionFunction(method = method,#
                                                      modelFit = mod$fit,#
                                                      newdata = dat[holdoutIndex, !(names(dat) %in% c(".outcome", ".modelWeights")), drop = FALSE],#
                                                      preProc = mod$preProc,#
                                                      param = info$seqParam[[parm]],#
                                                      custom = ctrl$custom$prediction),#
                           silent = TRUE)
predicted
ctrl$classProbs
probValues <- caret:::probFunction(method = method,#
                                                 modelFit = mod$fit,#
                                                 newdata = dat[holdoutIndex, !(names(dat) %in% c(".outcome", ".modelWeights")), drop = FALSE],#
                                                 preProc = mod$preProc,#
                                                 param = info$seqParam[[parm]],#
                                                 custom = ctrl$custom$probability)
lev
make.names(lev)
debug(caret:::probFunction)
probValues <- caret:::probFunction(method = method,#
                                                 modelFit = mod$fit,#
                                                 newdata = dat[holdoutIndex, !(names(dat) %in% c(".outcome", ".modelWeights")), drop = FALSE],#
                                                 preProc = mod$preProc,#
                                                 param = info$seqParam[[parm]],#
                                                 custom = ctrl$custom$probability)
obsLevels
head(newdata)
probs <- predict(modelFit, as.matrix(newdata), s = param$.lambda, #
    type = "response")
probs
probs <- as.list(as.data.frame(probs))
probs
probs <- predict(modelFit,#
                                             as.matrix(newdata),#
                                             s = param$.lambda,#
                                             type = "response")
probs
ls()
Q
data(mdrr)
undebug(caret:::probFunction)
debug(caret:::probFunction)
fit <- train(mdrrDescr[, 1:10], mdrrClass,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
n
probs
obsLevels
probs
Q
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
probs <- predict(modelFit, as.matrix(newdata), s = param$.lambda, #
    type = "response")
probs
class(probs)
as.list(probs)
?apply
apply(probs, 3, function(x) x)
apply(probs, 3, function(x) data.frame(x))
probs <- predict(modelFit, as.matrix(newdata), s = param$.lambda[1], #
    type = "response")
probs
probs[,,1]
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
caret:::probFunction
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=FALSE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
fit
predict(fit, X[1:5,])
debug(caret:::probFunction)
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
n
probs
Q
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
n
obsLevels
Q
library(caret)#
control <- trainControl(method="repeatedcv",#
                        number=5,#
                        repeats=2,#
                        classProbs=TRUE,#
                        verboseIter=TRUE)#
#
X <- structure(c(4.11019091046548, -0.474879238845933, 3.83191684218764, #
4.11034911794637, -0.283638930897423, 0.435813375462268, -0.705278739344504, #
-5.06377019484956, -2.91834333227821, 1.95425906242053, 4.34115829686939, #
2.13340074164004, 1.40600695185258, 0.864551873505795, 2.4983753460869, #
5.92959981661926, 1.56136118629488, -2.48979342124432, -4.3891711272773, #
-0.602989455839901, 3.18638421805934, 3.44368794356017, 1.12882646349296, #
-2.31267907913441, 2.0806289657871, -1.32158028149826, 3.12545352739578, #
-1.61706294035413, -2.37037391179568, -9.42723782267823, 0.581492426410141, #
1.8990492921512, 7.56744798445966, 4.38273282263593, -6.73900686217427, #
-0.223662754765133, -1.9459591046538, 0.816600675099408, -2.7548558339927, #
-3.96733172163105, -9.39257028124363, 0.999500319601574, 4.20325830995485, #
1.31521420797738, 0.475071315923176, -5.3861529269264, 2.75159223882532, #
2.06848091737501, -0.575644480053123, -2.34378249274305, -4.88279722262352, #
-6.60786179885651, -3.09661828504007, 4.2783760200595, 4.40827638258805, #
2.79275948711259, -3.5821955908153, 1.46210465294021, 3.90887184266787, #
1.80779774394272, -1.68233124854106, -7.49066162129454, -8.10541818561611, #
3.44528540786422, 1.82936190057501, 5.61841029919782, -4.23977941380125, #
-1.90892698008768, 0.977118971927251, -0.666616197264346, -3.50150070061161, #
-1.24589032846176, -3.20971248257769, -4.15941033082843, -0.369982702458554, #
-1.00090276302143, -3.11821423181501, -2.10584252131219, -3.90385271578179, #
-0.240019046366602, -4.9980947104365, -3.22350571081344, -3.15755434647443, #
-5.59058179233778, -7.20801278396243, -4.25363769416787, -6.5249266580142, #
-2.15317253831695, -0.160414663369766, -0.394197921525707, 1.47236992297403, #
1.89164132268961, -3.8466156570291, 0.234503406980091, -0.808343906401192, #
-1.10625269675599, 1.72374403453058, -1.167092621565, 1.98325350718974, #
3.26357022873935, -1.68061491328316, 2.1634802398875, 1.6682190545922, #
-0.18480608183224, 0.349201088737227, 1.14099734211423, 0.219577497818377, #
0.742328772083351, -1.21100748211474, 1.21178630268471, 1.54745425699821, #
0.616856165110727, 1.28668961022725, 5.68185485793196, -0.744863444388941, #
0.167683045108753, 0.956341530992779, 0.0499039493950697, 5.19726310902922, #
1.36153988171176, 0.81597364356306, 6.27228458494198, 0.357833234211481, #
4.73229754266066, 5.81070976331172, 3.91367428401069, 2.39256083238982, #
2.37852634379986, 7.28521534327382, 3.79530885302599, 1.20417765244414, #
3.21840586009058, 0.431490411965592, 5.33448852138086, 3.28376523401661, #
2.52043803265905, 9.77767481364907, 1.51093783794926, 1.77768390583632, #
3.44099283474984, 3.57672055389848, 5.25646258537235, 0.0080947842517079, #
5.65206223646954, -1.67094594430575, -4.15442988693261, -5.69889133938042, #
2.0154582582361, -1.21410325263655, -2.49636304823373, -2.08258644639527, #
-3.91292857208788, -1.53763117701186, -5.75090843734368, -0.0722437935753679, #
-0.873388439783027, -1.21518982225949, 2.56037465967885, -0.0881039835712253, #
-0.65687725708346, 1.98816027799229, 2.48315771677363, 3.36096005750866, #
-1.69679824148859, -0.661622354404606, 2.89889243026334, -4.5742909190528, #
0.559988748577414, -1.40665924859296, 0.667814077717295, 2.07890242754334, #
-1.37024880030038, -0.0661998351756696, -1.51329378762559, 1.08833204751554, #
-3.37477967548781, -0.625264990801526, -1.97436433259065, -1.08940362285367, #
3.00100717729416, 2.50009184533338, -0.644941352236103, 1.19166137795201, #
0.737880100072683, 2.89036959948707, -0.339312088230483, -0.958492071712295, #
1.16523503392519, -6.57180392518573, -4.16114576992784, -3.41433922554504, #
-0.46623242963419, -1.92032815593667, -2.32161068639264, 0.157713461631159, #
-0.551055740146113, 0.225455955682162, -3.0154883514613, 0.151719603199472, #
-5.40701990779486, 1.0858807754054, -1.08441866314917, -2.56213628686312, #
-2.60591252326994, 0.61056447862626, 4.10471172855584, -4.57555495133027, #
-4.48254178120463, -4.61316642294187, 3.70792393104638, 3.99288617614885, #
7.68523500721339, 3.83664122525594, 6.11044853796794, 3.85889398072283, #
1.32961142424733, 5.32417209521196, 9.03189653209522, 3.45321759346831, #
5.7403991935059, 6.10842680860636, -0.427774968432077, -2.63561310366238, #
2.13785904670314, -1.07480836132437, -2.25669956402936, 2.03778877749375, #
0.530920554255781, 0.646208649230977, -0.51178746315609, -3.56058222949623, #
5.56601733402948, 1.99617239101908, 0.032796495055665, 0.566857573721914, #
1.98776074491473, -0.602807470607464, 5.04157876141142, 1.57035676764863, #
0.636939652416136, -3.00195410415569, -1.17309575917919, -1.45852645597608, #
-0.74901646252678, 2.98190982993878, 0.155819845259776, -1.99433859702249, #
-3.22630503703484, -5.982497761711, 1.5708948143584, -2.46844400551207, #
-4.85465310526763, -8.42846090000808, -0.815309755613307, -1.33223036941583, #
-0.797766809299737, -5.81679547874534, -3.99907653598486, 3.37114965484448, #
-7.88320061202396, -1.69525160680457, -5.65999131816022, 0.635046932543092, #
0.139031455580863, -1.00980247821065, 0.656099464704003, -0.486800048561332, #
1.4044442346713, -0.456166819336766, -3.74733873681878, 2.32184478633757, #
0.420509637975372, -0.474447095882289, -1.30831924020202, -2.41604893250977, #
0.495678574746829, -3.6522216410561, 1.58906140265451, -1.88745976893196, #
1.601586376567, 2.42938964717418, -5.10096483761052, 1.56881366866353, #
4.07130452296237, 0.937345532173188, 2.18482050923554, -6.50560725183673, #
-4.62175135626478, -0.0790318361449815, -4.0631974040053, -1.16654269656641, #
-4.68928162111897, 1.11218619465051, -4.35194656949521, -2.72128123971805, #
-2.20967588465579, -5.41974059679105, 1.75825430276018, 4.17464904945008, #
2.48641218558677, -1.38414151515008, 2.81578694678285, -1.49099785864394, #
0.64249628056209, 1.93326251263282, 0.958066044736642, -1.76967812477918, #
3.24117463542405, 1.50794871071176, -2.50536790831719, -1.66453329687887, #
-3.26335652882981, -7.52470055257002, -2.71244452779937, -0.756476261269011, #
-1.4847293039179, -1.76069763974298, 1.28760970875847, 0.859443538761426, #
2.32516553235347, 0.555100630288912, 6.1998028672119, 4.0725523027084, #
8.70508829389255, 4.22083190529964, 5.7295285787595, 6.05324486438068, #
2.42396965507391, 0.924563769610573, -0.983287294646751), .Dim = c(66L, #
5L), .Dimnames = list(NULL, c("V1", "V2", "V3", "V4", "V5")))#
Y <- structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, #
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, #
6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, #
10L, 11L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 1L, 2L, #
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L), .Label = c("A", #
"B", "C", "D", "E", "F", "G", "H", #
"I", "J", "K"), class = "factor")#
#
fit <- train(X, Y,#
                 method = "glmnet",#
                 preProcess = c("center", "scale"),#
                 tuneLength =3,#
                 trControl = control)
fit
predict(fit, X[1:5,], type = "prob")
library(caret)#
library(mlbench)#
data(Sonar)#
set.seed(808)#
inTrain <- createDataPartition(Sonar$Class, p = 2/3, list = FALSE)#
## Save the predictors and class in different objects#
sonarTrain <- Sonar[ inTrain, -ncol(Sonar)]#
sonarTest  <- Sonar[-inTrain, -ncol(Sonar)]#
#
trainClass <- Sonar[ inTrain, "Class"]#
testClass  <- Sonar[-inTrain, "Class"]#
#
centerScale <- preProcess(sonarTrain)#
centerScale#
#
training <- predict(centerScale, sonarTrain)#
testing <- predict(centerScale, sonarTest)
fitControl <- trainControl(## 10-fold CV#
                           method = "repeatedcv",#
                           number = 10,#
                           ## repeated ten times#
                           repeats = 10)#
nnetGrid <- expand.grid(.size = 1:10, .decay = c(0, 0.001, 0.01, .1))#
#
set.seed(825)#
nnetFit <- train(Class ~ ., data = training, #
                 method = "nnet", #
                 trControl = fitControl,#
                 tuneGrid = nnetGrid,#
                 trace = FALSE)
fitControl <- trainControl(## 10-fold CV#
                           method = "repeatedcv",#
                           number = 10,#
                           ## repeated ten times#
                           repeats = 10,#
                           verboseIter = TRUE)#
nnetGrid <- expand.grid(.size = 1:10, .decay = c(0, 0.001, 0.01, .1))#
#
set.seed(825)#
nnetFit <- train(x = training,#
                 y = trainClass,#
                 method = "nnet", #
                 trControl = fitControl,#
                 tuneGrid = nnetGrid,#
                 trace = FALSE)
plot(nnetFit)
nnetGrid$.bag <- FALSE#
set.seed(825)#
avNnetFit <- train(x = training,#
                   y = trainClass,#
                   method = "avNNet", #
                   trControl = fitControl,#
                   tuneGrid = nnetGrid,#
                   trace = FALSE)
plot(avNnetFit)
parallelPlot(resamples(list(single = nnetFit, averaged = avNnetFit)))
?xyplot.resamples
parallelplot(resamples(list(single = nnetFit, averaged = avNnetFit)))
plot(avNnetFit)
plot(nnetFit)
quartz()
plot(avNnetFit)
xyplot(resamples(list(single = nnetFit, averaged = avNnetFit)),#
       what = "BlandAltman")
?avNNet
nnetGrid$.bag <- FALSE#
set.seed(825)#
avNnetFit <- train(x = training,#
                   y = trainClass,#
                   method = "avNNet", #
                   trControl = fitControl,#
                   tuneGrid = nnetGrid,#
                   repeats = 15,#
                   trace = FALSE)#
parallelplot(resamples(list(single = nnetFit, averaged = avNnetFit)))#
#
xyplot(resamples(list(single = nnetFit, averaged = avNnetFit)),#
       what = "BlandAltman")
plot(avNnetFit)
?bag
ldaBag
?unlink
?format
?date
format(Sys.time(), "%a %b %d %H:%M:%S %Y")
format(Sys.time(), "%Y_%m %a %b %d %H:%M:%S %Y")
format(Sys.time(), "%Y_%m_%d_%H_%M %a %b %d %H:%M:%S %Y")
format(Sys.time(), "%Y_%m_%d_%H_%M")
library(sqlite)
install.packages("RSQLite", repos = "http://cran.r-project.org")
librarY(RSQLite)
library(RSQLite)
? RSQLite
? RSQLite
?? RSQLite
help(package="RSQLite")
drv <- dbDriver("SQLite")#
con <- dbConnect(drv, dbname = "~/Dropbox/Papers2/Library.papers2/Database.papersdb")
con
dbListTables(con)
tt <- dbReadTable(con, "Author")
str(tt)
dbListTables(con)
tt <- dbReadTable(con, "Citation")
str(tt)
tt <- dbReadTable(con, "Keyword")
tt
str(tt)
dbSendQuery(con, "SELECT * from Authors")
dbSendQuery(con, "SELECT * from Author")
tt <- dbSendQuery(con, "SELECT * from Author")
tt <- dbSendQuery(con, "SELECT * from Author")
tt <- dbSendQuery(con, "SELECT * from Author")
fetch(tt, )
fetch(tt)
str(tt)
tt <- dbReadTable(con, "Keyword", "test")
dbDisconnect(con)
drv <- dbDriver("SQLite")#
con <- dbConnect(drv, dbname = "~/Dropbox/Papers2/Library.papers2/Database.papersdb")
tt <- dbReadTable(con, "Keyword", "test")
str(test)
class(tt)
str(tt)
?ldaBag
?bag
library(caret)
?ldaBag
ldaBag
?file.copy
setwd("~/Code/caret/html/")
list.files(pattern = "png$")
?unzip
?list.files
?unlink
